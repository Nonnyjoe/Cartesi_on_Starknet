// (c) Cartesi and individual authors (IDOGWU CHINONSO)
// SPDX-License-Identifier: Apache-2.0 (see LICENSE)

use starknet::{ContractAddress};

/// @title Outputs
/// @notice Defines the signatures of outputs that can be generated by the
/// off-chain machine and verified by the on-chain contracts.
#[starknet::interface]
pub trait IOutputs<TContractState> {
    
    /// @notice A piece of verifiable information.
    /// @param payload An arbitrary payload.
    fn Notice(self: @TContractState, payload: Array<felt252>);

    /// @notice A single-use permission to execute a specific message call
    /// from the context of the application contract.
    /// @param destination The address that will be called
    /// @param value The amount of Wei to be transferred through the call
    /// @param payload The payload, which—in the case of Solidity
    /// contracts—encodes a function call
    fn Voucher(self: @TContractState, destination: ContractAddress, value: u256, payload: Array<felt252>);

    /// @notice A single-use permission to execute a specific delegate call
    /// from the context of the application contract.
    /// @param destination The address that will be called
    /// @param payload The payload, which—in the case of Solidity
    /// libraries—encodes a function call
    fn DelegateCallVoucher(self: @TContractState, destination: ContractAddress, payload: Array<felt252>);
}